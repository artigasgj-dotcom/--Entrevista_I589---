import streamlit as st
import sqlite3

def guardar_parte_c(temor, persecucion, da√±o, tortura, apoyo):
    conn = sqlite3.connect("clientes.db")
    cursor = conn.cursor()
    cursor.execute("""
        CREATE TABLE IF NOT EXISTS parte_c (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            temor TEXT,
            persecucion TEXT,
            da√±o TEXT,
            tortura TEXT,
            apoyo TEXT
        )
    """)
    cursor.execute("""
        INSERT INTO parte_c (temor, persecucion, da√±o, tortura, apoyo)
        VALUES (?, ?, ?, ?, ?)
    """, (temor, persecucion, da√±o, tortura, apoyo))
    conn.commit()
    conn.close()

def abrir_parte_c():
    st.subheader("üß© Parte C ‚Äì Temor y Persecuci√≥n")

    st.markdown("""
    Esta secci√≥n recoge tus experiencias de temor, da√±o y persecuci√≥n.  
    Puedes compartir con confianza. Tu voz ser√° cuidada con respeto y protecci√≥n.
    """)

    temor = st.text_area("¬øPor qu√© teme regresar a su pa√≠s?")
    persecucion = st.text_area("¬øHa sufrido persecuci√≥n en el pasado?")
    da√±o = st.text_area("¬øHa recibido amenazas o da√±o f√≠sico?")
    tortura = st.text_area("¬øTeme ser torturado si regresa?")
    apoyo = st.text_area("¬øRecibe apoyo emocional, legal o espiritual?")

    if st.button("Guardar Parte C"):
        respuestas = [temor, persecucion, da√±o, tortura, apoyo]

        if not all(respuestas):
            st.warning("‚ö†Ô∏è Por favor completa todos los campos antes de guardar.")
            return

        if any(len(texto.strip()) < 10 for texto in respuestas):
            st.error("‚ùå Cada respuesta debe tener al menos una frase significativa.")
            return

        guardar_parte_c(*respuestas)
        st.success("‚úÖ Parte C guardada correctamente con dignidad.")
